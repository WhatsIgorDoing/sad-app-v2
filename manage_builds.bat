@echo off
setlocal enabledelayedexpansion

echo ====================================================
echo     SAD App v2.0 - Automa√ß√£o Completa
echo ====================================================
echo     Build + Teste + An√°lise + Distribui√ß√£o
echo ====================================================
echo.

REM Menu de op√ß√µes
:menu
echo üéØ Escolha uma a√ß√£o:
echo.
echo [1] üöÄ Build Completo (Otimizado)
echo [2] üß™ Testar Execut√°vel
echo [3] üìä Analisar Performance  
echo [4] üì¶ Preparar Distribui√ß√£o
echo [5] üîÑ Processo Completo (1+2+3+4)
echo [6] üßπ Limpar Builds
echo [0] ‚ùå Sair
echo.
set /p choice="Digite sua escolha (0-6): "

if "%choice%"=="1" goto build
if "%choice%"=="2" goto test
if "%choice%"=="3" goto analyze
if "%choice%"=="4" goto package
if "%choice%"=="5" goto full_process
if "%choice%"=="6" goto clean
if "%choice%"=="0" goto exit
goto menu

:build
echo.
echo ====================================================
echo üöÄ INICIANDO BUILD OTIMIZADO
echo ====================================================
call build_optimized.bat
goto menu

:test
echo.
echo ====================================================
echo üß™ TESTANDO EXECUT√ÅVEL
echo ====================================================
call test_optimized_exe.bat
goto menu

:analyze
echo.
echo ====================================================
echo üìä ANALISANDO PERFORMANCE
echo ====================================================
call analyze_performance.bat
goto menu

:package
echo.
echo ====================================================
echo üì¶ PREPARANDO DISTRIBUI√á√ÉO
echo ====================================================
echo.

if not exist "dist\SAD_App_v2_Optimized\SAD_App_v2.exe" (
    echo ‚ùå Build otimizado n√£o encontrado!
    echo üí° Execute o build primeiro (op√ß√£o 1)
    echo.
    pause
    goto menu
)

echo üîß Criando pacote de distribui√ß√£o...

REM Criar pasta de distribui√ß√£o
if not exist "release" mkdir release

REM Criar timestamp para versionamento
for /f "tokens=2 delims==" %%a in ('wmic OS Get localdatetime /value') do set "dt=%%a"
set "timestamp=%dt:~0,4%-%dt:~4,2%-%dt:~6,2%_%dt:~8,2%-%dt:~10,2%"

set "release_name=SAD_App_v2_Optimized_%timestamp%"
set "release_path=release\%release_name%"

echo üìÅ Criando: %release_name%

REM Copiar build otimizado
xcopy "dist\SAD_App_v2_Optimized" "%release_path%" /E /I /Q

REM Criar arquivo README para distribui√ß√£o
echo # SAD App v2.0 - Vers√£o Otimizada > "%release_path%\README.txt"
echo. >> "%release_path%\README.txt"
echo Data do Build: %timestamp% >> "%release_path%\README.txt"
echo. >> "%release_path%\README.txt"
echo ## Como usar: >> "%release_path%\README.txt"
echo 1. Execute SAD_App_v2.exe >> "%release_path%\README.txt"
echo 2. Mantenha a pasta _internal junto com o execut√°vel >> "%release_path%\README.txt"
echo 3. Para mover o programa, mova toda a pasta >> "%release_path%\README.txt"
echo. >> "%release_path%\README.txt"
echo ## Estrutura: >> "%release_path%\README.txt"
echo - SAD_App_v2.exe: Execut√°vel principal >> "%release_path%\README.txt"
echo - _internal/: Bibliotecas e recursos necess√°rios >> "%release_path%\README.txt"

REM Criar arquivo ZIP
echo üóúÔ∏è Criando arquivo ZIP...
if exist "%release_path%.zip" del "%release_path%.zip"

REM Usar PowerShell para criar ZIP
powershell -command "Compress-Archive -Path '%release_path%' -DestinationPath '%release_path%.zip' -Force"

if exist "%release_path%.zip" (
    echo ‚úÖ Distribui√ß√£o criada com sucesso!
    echo.
    echo üì¶ Arquivos criados:
    echo   üìÅ Pasta: %release_path%
    echo   üóúÔ∏è ZIP: %release_path%.zip
    echo.
    
    REM Informa√ß√µes do pacote
    for %%A in ("%release_path%.zip") do (
        set /a zip_size=%%~zA/1024/1024
        echo üíæ Tamanho do ZIP: !zip_size! MB
    )
    
    echo üéØ Pronto para distribui√ß√£o!
) else (
    echo ‚ùå Erro ao criar arquivo ZIP
)

echo.
pause
goto menu

:full_process
echo.
echo ====================================================
echo üîÑ PROCESSO COMPLETO
echo ====================================================
echo.

echo üöÄ 1/4 - Executando build...
call build_optimized.bat

echo.
echo üß™ 2/4 - Testando execut√°vel...
timeout /t 3 /nobreak >nul
call test_optimized_exe.bat

echo.
echo üìä 3/4 - Analisando performance...
timeout /t 3 /nobreak >nul
call analyze_performance.bat

echo.
echo üì¶ 4/4 - Preparando distribui√ß√£o...
timeout /t 3 /nobreak >nul
goto package

:clean
echo.
echo ====================================================
echo üßπ LIMPEZA DE BUILDS
echo ====================================================
echo.

echo ‚ö†Ô∏è Isso remover√° todos os builds e caches
set /p confirm="Tem certeza? (S/N): "

if /i "%confirm%"=="S" (
    echo üßπ Removendo builds...
    
    if exist "build" rmdir /s /q "build"
    if exist "dist" rmdir /s /q "dist"
    if exist "__pycache__" rmdir /s /q "__pycache__"
    if exist ".cache" rmdir /s /q ".cache"
    if exist "release" rmdir /s /q "release"
    
    REM Limpar cache Python recursivamente
    for /d /r . %%d in (__pycache__) do @if exist "%%d" rmdir /s /q "%%d"
    
    echo ‚úÖ Limpeza conclu√≠da!
) else (
    echo ‚ùå Limpeza cancelada
)

echo.
pause
goto menu

:exit
echo.
echo üëã Obrigado por usar o SAD App v2.0!
echo.
exit /b 0